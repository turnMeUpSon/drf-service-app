services:
  web-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    environment:
          DB_HOST: database
          DB_NAME: "${POSTGRES_DB}"
          DB_USER: "${POSTGRES_USER}"
          DB_PASS: "${POSTGRES_PASSWORD}"
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database
    env_file:
      - ./.env
  
  database:
    image: postgres:14.6-alpine
    environment:
          POSTGRES_DB: "${POSTGRES_DB}"
          POSTGRES_USER: "${POSTGRES_USER}"
          POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  
  redis:
    image: redis:7.0.5-alpine
    hostname: redis
  
  worker:
    build: 
      context: .
    hostname: worker
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./backend:/backend
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
          DB_HOST: database
          DB_NAME: "${POSTGRES_DB}"
          DB_USER: "${POSTGRES_USER}"
          DB_PASS: "${POSTGRES_PASSWORD}"
    env_file:
      - ./.env
  
  worker2:
    build: 
      context: .
    hostname: worker2
    entrypoint: celery
    command: -A celery_app.app worker --loglevel=info
    volumes:
      - ./backend:/backend
    links:
      - redis
    depends_on:
      - redis
      - database
    environment:
          DB_HOST: database
          DB_NAME: "${POSTGRES_DB}"
          DB_USER: "${POSTGRES_USER}"
          DB_PASS: "${POSTGRES_PASSWORD}"
    env_file:
      - ./.env

  flower:
    build: 
      context: .
    hostname: flower
    entrypoint: celery
    command: -A celery_app.app flower
    volumes:
      - ./backend:/backend
    links:
      - redis
    depends_on:
      - redis
    env_file:
      - ./.env
    ports:
      - "5555:5555"